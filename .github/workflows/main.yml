name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t example-voting-app .
          docker tag example-voting-app:latest 851725539465.dkr.ecr.us-east-1.amazonaws.com/votingapp-ecr:latest
          docker push 851725539465.dkr.ecr.us-east-1.amazonaws.com/votingapp-ecr:latest

      - name: Register ECS task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://ecs-task-definition.json

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster example-voting-app-cluster --service example-voting-app-service --force-new-deployment

      - name: Sync Argo CD application
        run: |
          argocd app sync example-voting-app
